// version of protocol buffer used
syntax = "proto3";

 // package name for the buffer will be used later
 package poh;

 // service which can be executed
 service PoH {
 // function which can be called
   rpc initialize (InitializeRequest) returns (InitializeResponse);
 // challenge mechanism
   rpc challenge_create (ChallengeCreateRequest) returns (ChallengeCreateResponse);
   rpc challenge_reply (ChallengeReplyRequest) returns (ChallengeReplyResponse);
 }

 // argument
 message InitializeRequest {
   string pub_key = 1;
   string cert = 2;
 }

 // return value
 message InitializeResponse {
   string msg = 1;
   bool valid = 2;
   string session_key = 3;
 }

 message ChallengeCreateRequest {
   string session_key = 1;
   string pub_hash_enc = 2;
   string pub_enc = 3;
   uint64 valid_time_sec = 4;
 }

 message ChallengeCreateResponse {
   bool valid = 1;
   string info = 2;
 }

 message ChallengeReplyRequest {
   string session_key = 1;
   string pub_key_enc = 2; 
 }

 message ChallengeReplyResponse {
   bool valid = 1;
 }



message PoHRootCertificates {
   repeated PoHRootCertificate rc = 1;
}

 message PoHRootCertificate {
   string public_key = 1;
   int32 era_id = 2;
 }
